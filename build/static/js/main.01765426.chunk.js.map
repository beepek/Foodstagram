{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/ProfileBio/ProfileBio.jsx","components/PostCard/PostCard.jsx","components/Loader/Loader.js","components/PostGallery/PostGallery.jsx","components/Header/Header.jsx","pages/Profile/Profile.jsx","components/AddPost/AddPost.jsx","utils/postApi.js","pages/Feed/Feed.jsx","pages/App/App.js","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","tokenService","setToken","setItem","removeToken","getUserFromToken","user","BASE_URL","userService","signup","fetch","method","body","then","res","ok","json","response","console","log","Error","err","getUser","logout","login","creds","headers","Headers","stringify","isPasswordMatch","passwordOne","passwordConf","SignUpPage","useState","message","passwordError","setError","username","email","password","bio","state","setState","selectedFile","setSelectedFile","navigate","useNavigate","handleChange","e","target","name","value","preventDefault","key","formData","FormData","append","forEach","item","handleSignUpOrLogin","Grid","textAlign","style","height","width","verticalAlign","Column","maxWidth","Header","as","color","Image","src","Form","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","TextArea","label","Field","files","Button","LoginPage","fluid","size","Message","to","ProfileBio","columns","Row","photoUrl","avatar","vertical","PostCard","post","isProfile","addLike","removeLike","loggedUser","Card","raised","Content","wrapped","ui","Description","caption","_id","Loading","Loader","active","PostGallery","posts","numPhotosCol","loading","Group","itemsPerRow","stackable","Dimmer","inverted","map","PageHeader","handleLogout","clearing","floated","Icon","onClick","ProfilePage","setPosts","profileUser","setProfileUser","setLoading","useParams","getProfile","useCallback","data","useEffect","centered","AddPostForm","handleAddPost","create","getAll","Feed","postsAPI","getPosts","App","setUser","path","element","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.01765426.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(token) {\n  if (token) {\n    localStorage.setItem('token', token);\n  } else {\n    localStorage.removeItem('token');\n  }\n}\n\nfunction getToken() {\n  let token = localStorage.getItem('token');\n  if (token) {\n    // Check if expired, remove if it is\n    // atob is a function that decodes a base-64 string\n    const payload = JSON.parse(atob(token.split('.')[1]));\n    // JWT's exp is expressed in seconds, not milliseconds, so convert\n    if (payload.exp < Date.now() / 1000) {\n      localStorage.removeItem('token');\n      token = null;\n    }\n  }\n  return token;\n}\n\nfunction getUserFromToken() {\n  const token = getToken();\n  return token ? JSON.parse(atob(token.split('.')[1])).user : null;\n}\n\nfunction removeToken() {\n  localStorage.removeItem('token');\n}\n\nconst tokenService = {\n  setToken,\n  getToken,\n  removeToken,\n  getUserFromToken\n};\n\nexport default tokenService;","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    \n    // Writing your error handling like this allows you to throw the error response \n    // to the catch block where signup occurs,  \n\n//     res.status(400).json({ err: \"Something went wrong\" }); notice err, and response.err match\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    return res.json().then(response => {\n      console.log(response)\n      throw new Error(response.err)\n    })\n  })\n  .then(({token}) => tokenService.setToken(token));\n}\n\n\nconst userService = {\n  signup, \n  getUser,\n  logout,\n  login,\n};\n\nexport default userService;\n","import React, { useState } from \"react\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport { Button, Form, Grid, Header, Image, Segment } from \"semantic-ui-react\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction isPasswordMatch(passwordOne, passwordConf) {\n  return passwordOne === passwordConf;\n}\n\nexport default function SignUpPage(props) {\n  const [error, setError] = useState({\n    message: '',\n    passwordError: false\n  });\n  \n  const [state, setState] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    passwordConf: \"\",\n    bio: \"\",\n  });\n\n  const [selectedFile, setSelectedFile] = useState(\"\");\n\n  // initialized the react router hook, which allows you to programatically\n  // change routes, aka after our signup call in the handleSubmit\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault(); // this stop the browser from submitting the form!\n\n    if (!isPasswordMatch(state.password, state.passwordConf)) return setError({message: 'Passwords Must Match!', passwordError: true});\n    setError({message: '', passwordError: false})\n    // Create formData, so we can send over our file, using multipart/formdata header\n    // which sends over the basic inputs, and then the file\n\n    const formData = new FormData(); //< - this constructor from the browser allows us to create data\n    // now we can set key value pairs on the formData\n    formData.append(\"photo\", selectedFile);\n    // Line by line tactic\n    // formData.append('username', state.username);\n    // formData.append('email', state.email);\n    // and so on for the rest or our state\n\n    // A more robust way to generate the rest of the formData is using a loop!\n    // loop over our state object using a for ... in loop\n    for (let key in state) {\n      formData.append(key, state[key]);\n    }\n\n    console.log(\n      formData,\n      \" <- form Data, you cant see this!\",\n      \"you have to loop over it\"\n    );\n    console.log(\n      formData.forEach((item) => console.log(item)),\n      \" < This lets you see the key values in formData\"\n    );\n\n    try {\n      await userService.signup(formData); // THIS IS WHERE WE ARE MAKING A REQUEST TO THE SERVER, the response is handled inside function .thens, go at the look at the function\n      // After the line above,\n      // the new token is in localstorage,\n      // so now we can update state\n      props.handleSignUpOrLogin(); // <- call the function from the app component\n      // that gets the token from localstorage, and sets in our App's state\n \n      // navigate whereever after the user has logged in\n      navigate(\"/\"); // this accepts a route you defined in your App.js\n    } catch (err) {\n      // the error comes from the throw statement in the signup functions\n      // .then\n      console.log(err);\n      setError({message: err.message, passwordError: false});\n    }\n  }\n\n  function handleFileInput(e) {\n    console.log(e.target.files, \" < - this is e.target.files!\");\n    setSelectedFile(e.target.files[0]);\n  }\n\n\n\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src=\"https://i.imgur.com/CRCb47X.png\" /> Sign Up\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              name=\"username\"\n              placeholder=\"username\"\n              value={state.username}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              error={error.passwordError}\n              name=\"passwordConf\"\n              type=\"password\"\n              placeholder=\"Confirm Password\"\n              value={state.passwordConf}\n              onChange={handleChange}\n              required\n            />\n            <Form.TextArea\n              label=\"bio\"\n              name=\"bio\"\n              placeholder=\"Tell us about yourself, Chef!\"\n              value={state.bio}\n              onChange={handleChange}\n            />\n            <Form.Field>\n              <Form.Input\n                type=\"file\"\n                name=\"photo\"\n                placeholder=\"upload image\"\n                onChange={handleFileInput}\n              />\n            </Form.Field>\n            <Button type=\"submit\" className=\"btn\">\n              Signup\n            </Button>\n          </Segment>\n          {error.message ? <ErrorMessage error={error.message} /> : null}\n        </Form>\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import React, { useState } from \"react\";\nimport \"./LoginPage.css\";\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\nimport userService from \"../../utils/userService\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n} from \"semantic-ui-react\";\n\nexport default function LoginPage(props) {\n  const [error, setError] = useState(\"\");\n  const [state, setState] = useState({\n    email: \"\",\n    password: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  function handleChange(e) {\n    setState({\n      ...state,\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      await userService.login(state);\n      // Route to wherever you want!\n      props.handleSignUpOrLogin();\n      navigate(\"/\");\n    } catch (err) {\n      // Invalid user data (probably duplicate email)\n      // this is from the throw block in the userService.login first then function\n      setError(err.message);\n    }\n  }\n  return (\n    <Grid\n      textAlign=\"center\"\n      style={{ height: \"100vh\", width: \"100vw\" }}\n      verticalAlign=\"middle\"\n    >\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n          <Image src=\"https://i.imgur.com/CRCb47X.png\" /> Log-in to your\n          account\n        </Header>\n        <Form onSubmit={handleSubmit}>\n          <Segment stacked>\n            <Form.Input\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"email\"\n              value={state.email}\n              onChange={handleChange}\n              required\n            />\n            <Form.Input\n              name=\"password\"\n              type=\"password\"\n              placeholder=\"password\"\n              value={state.password}\n              onChange={handleChange}\n              required\n            />\n            <Button\n              color=\"teal\"\n              fluid\n              size=\"large\"\n              type=\"submit\"\n              className=\"btn\"\n            >\n              Login\n            </Button>\n          </Segment>\n        </Form>\n        <Message>\n          New to us? <Link to=\"/signup\">Sign Up</Link>\n        </Message>\n        {error ? <ErrorMessage error={error} /> : null}\n      </Grid.Column>\n    </Grid>\n);\n}","import { Image, Grid, Segment } from \"semantic-ui-react\";\r\n\r\nfunction ProfileBio({ user }) {\r\n  return (\r\n    <Grid textAlign=\"center\" columns={2}>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <Image\r\n            src={`${\r\n              user.photoUrl\r\n                ? user.photoUrl\r\n                : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n            } `}\r\n            avatar\r\n            size=\"small\"\r\n          />\r\n        </Grid.Column>\r\n        <Grid.Column textAlign=\"left\" style={{ maxWidth: 450 }}>\r\n          <Segment vertical>\r\n            <h3>{user.username}</h3>\r\n          </Segment>\r\n          <Segment>\r\n            <span> Bio: {user.bio}</span>\r\n          </Segment>\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default ProfileBio;","import React from \"react\";\r\nimport { Card, Image, } from \"semantic-ui-react\";//comment as well when we get there\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction PostCard({ post, isProfile, addLike, removeLike, loggedUser }) {\r\n    return (\r\n        <Card key={post._id} raised>\r\n          {isProfile ? (\r\n            \"\"\r\n          ) : (\r\n            <Card.Content textAlign=\"left\">\r\n              <Card.Header>\r\n                <Link to={`/${post.user.username}`}>\r\n                  <Image\r\n                    size=\"large\"\r\n                    avatar\r\n                    src={\r\n                      post.user.photoUrl\r\n                        ? post.user.photoUrl\r\n                        : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n                    }\r\n                  />\r\n                  {post.user.username}\r\n                </Link>\r\n              </Card.Header>\r\n            </Card.Content>\r\n          )}\r\n    \r\n          <Image src={`${post?.photoUrl}`} wrapped ui={false} />\r\n          <Card.Content>\r\n            <Card.Description>{post.caption}</Card.Description>\r\n          </Card.Content>          \r\n        </Card>\r\n      );\r\n    }\r\n    \r\nexport default PostCard;\r\n    \r\n    \r\n\r\n","import { Loader } from 'semantic-ui-react'\r\n\r\nexport default function Loading() {\r\n  return (\r\n \r\n        <Loader size=\"small\" active>\r\n          Loading\r\n        </Loader>\r\n\r\n  );\r\n}","import React from 'react';\r\nimport { Card, Dimmer, Segment, Image } from 'semantic-ui-react'\r\nimport PostCard from '../PostCard/PostCard';\r\nimport Loader from '../Loader/Loader';\r\n\r\nexport default function PostGallery({posts, numPhotosCol, isProfile, loading, loggedUser}){\r\n    return (\r\n        <Card.Group itemsPerRow={numPhotosCol} stackable>\r\n            {loading ? (\r\n                <Segment>\r\n                    <Dimmer active inverted>\r\n                        <Loader size=\"small\">Loading..</Loader>\r\n                    </Dimmer>\r\n                    <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\r\n                </Segment>\r\n            ) : null}\r\n            {posts.map((post) => {\r\n              return (\r\n                <PostCard\r\n                post={post}\r\n                key={post._id}\r\n                isProfile={isProfile}\r\n                loggedUser={loggedUser}\r\n              />\r\n              )\r\n            })}\r\n        </Card.Group>\r\n    )\r\n}","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { Header, Segment, Image, Icon } from \"semantic-ui-react\";\r\n\r\nexport default function PageHeader({ loggedUser, handleLogout }){\r\n    return (\r\n      <Segment clearing>\r\n        <Header as=\"h2\" floated=\"right\">\r\n          <Link to=\"/\">\r\n            <Icon name=\"home\"></Icon>\r\n          </Link>\r\n          <Link to=\"\" onClick={handleLogout}>\r\n            Logout\r\n          </Link>\r\n        </Header>\r\n        <Header as=\"h2\" floated=\"left\">\r\n          <Link to={`/${loggedUser?.username}`}>\r\n            <Image\r\n              src={\r\n                  loggedUser?.photoUrl\r\n                  ? loggedUser?.photoUrl\r\n                  : \"https://react.semantic-ui.com/images/wireframe/square-image.png\"\r\n              }\r\n              avatar\r\n            ></Image>\r\n          </Link>\r\n        </Header>\r\n      </Segment>\r\n\r\n    )\r\n}","import React, { useState, useEffect, useCallback } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport ProfileBio from \"../../components/ProfileBio/ProfileBio\";\r\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\r\nimport PageHeader from \"../../components/Header/Header\";\r\nimport Loading from \"../../components/Loader/Loader\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport userService from \"../../utils/userService\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\n\r\n\r\nexport default function ProfilePage({ loggedUser, handleLogout}) {\r\n    const [posts, setPosts] = useState([]);\r\n    const [profileUser, setProfileUser] = useState({})\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const {username} = useParams();\r\n\r\n    const getProfile = useCallback(async () => {\r\n        try {\r\n            const response = await userService.getProfile(username);\r\n            setLoading(false);\r\n            setProfileUser(response.data.user);\r\n            setPosts(response.data.posts);\r\n        }catch (err) {\r\n            setError(\"profile does not exist\");\r\n        }\r\n\r\n    }, [username]);\r\n    useEffect(() => {\r\n        getProfile();\r\n    }, [username, getProfile]);\r\n    if (error) {\r\n        return(\r\n            <>\r\n                <PageHeader handleLogout={handleLogout} loggedUser={loggedUser}/>\r\n                <ErrorMessage error={error} />\r\n                </>\r\n        );\r\n    }\r\n    if (loading) {\r\n        return (\r\n            <>\r\n            <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\r\n            <Loading />\r\n            </>\r\n        );\r\n    }\r\n    return (\r\n        <Grid>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <PageHeader handleLogout={handleLogout} loggedUser={loggedUser}/>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n                <Grid.Column>\r\n                    <ProfileBio user={profileUser} />\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row centered>\r\n                <Grid.Column style={{maxWidth:750}}>\r\n                    <PostGallery\r\n                        posts={posts}\r\n                        numPhotosCol={3}\r\n                        isProfile={true}\r\n                        loading={loading}\r\n                        loggedUser={loggedUser}\r\n                        />                        \r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n    );\r\n}","import React, { useState } from \"react\";\r\nimport { Button, Form, Segment } from \"semantic-ui-react\";\r\n\r\nexport default function AddPostForm(props) {\r\n    const [state, setState] = useState({\r\n        caption: \"\",\r\n    });\r\n    const [selectedFile, setSelectedFile] = useState(\"\");\r\n\r\n    function handleFileInput(e) {\r\n        setSelectedFile(e.target.files[0]);\r\n    }\r\n    function handleChange(e) {\r\n        setState({\r\n            caption: e.target.value,\r\n        });\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const formData = new FormData();\r\n        formData.append(\"photo\", selectedFile);\r\n        formData.append(\"caption\", state.caption);\r\n        props.handleAddPost(formData);\r\n    }\r\n\r\n\r\n  return (\r\n    <Segment>\r\n      <Form onSubmit={handleSubmit}>\r\n        <Form.Input\r\n          className=\"form-control\"\r\n          name=\"caption\"\r\n          value={state.caption}\r\n          placeholder=\"Tell us about your recipie!\"\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <Form.Field>\r\n          <Form.Input\r\n            type=\"file\"\r\n            name=\"photo\"\r\n            placeholder=\"upload image\"\r\n            onChange={handleFileInput}\r\n          />\r\n        </Form.Field>\r\n        <Button type=\"submit\" className=\"btn\">\r\n          Add A Recipie or Meal!\r\n        </Button>\r\n      </Form>\r\n    </Segment>\r\n  );\r\n  }\r\n\r\n","import tokenService from \"./tokenService\";\r\n\r\nconst BASE_URL = \"/api/posts\";\r\n\r\n\r\nexport function create(post) {// DONT STRINGIFY, THIS IS A PHOTO POST! (formdata)\r\n    return fetch(BASE_URL, {\r\n      method: \"POST\",\r\n      body: post,\r\n      headers: {\r\n        \"Authorization\": \"Bearer \" + tokenService.getToken(),\r\n      },\r\n    }).then((res) => {\r\n      if (res.ok) return res.json(); \r\n      return res.json().then(response => {\r\n        console.log(response)\r\n        throw new Error(response.err)\r\n      })\r\n    });\r\n  }\r\n\r\n\r\nexport function getAll() {\r\n  return fetch(BASE_URL, {\r\n  \r\n    headers: {\r\n      'Authorization': 'Bearer ' + tokenService.getToken() \r\n    }\r\n  })\r\n  .then((res) => {\r\n    console.log(\"this is the res.json\", res)\r\n    if(res.ok) return res.json();\r\n\r\n    return res.json().then(response => {\r\n      console.log(response)\r\n      throw new Error(response.err)\r\n    })\r\n  });\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport PageHeader from \"../../components/Header/Header\";\r\nimport AddPost from \"../../components/AddPost/AddPost\";\r\nimport PostGallery from \"../../components/PostGallery/PostGallery\";\r\nimport ErrorMessage from \"../../components/ErrorMessage/ErrorMessage\";\r\nimport Loading from \"../../components/Loader/Loader\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nimport * as postsAPI from \"../../utils/postApi\";\r\n\r\n\r\nexport default function Feed({loggedUser, handleLogout}) {\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(\"\");\r\n\r\nasync function handleAddPost(post) {\r\n    try {\r\n    \r\n      setLoading(true);\r\n      const response = await postsAPI.create(post);\r\n    \r\n      console.log(response);\r\n      setPosts([response.data, ...posts]); \r\n      setLoading(false);\r\n    } catch (err) {\r\n      \r\n      console.log(err.message);\r\n      setError(\"Error creating post, please try again\");\r\n    }\r\n  }\r\n  async function getPosts() {\r\n    try {\r\n      const response = await postsAPI.getAll();\r\n      console.log(response, \" data\");\r\n      setPosts([...response.data]);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      console.log(err.message, \" this is the getPosts error\");\r\n      setLoading(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n        getPosts();\r\n  }, []); // This is useEffect runs once when the Feed component\r\n  // loads\r\n  if (error) {\r\n    return (\r\n      <>\r\n        <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\r\n        <ErrorMessage error={error} />;\r\n       \r\n      </>\r\n    );\r\n  }\r\n  if (loading){\r\n    return(\r\n        <>\r\n            <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\r\n            <Loading />\r\n        </>\r\n    )\r\n  }\r\n  return (\r\n    <Grid centered>\r\n      <Grid.Row>\r\n        <Grid.Column>\r\n          <PageHeader handleLogout={handleLogout} loggedUser={loggedUser} />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <AddPost handleAddPost={handleAddPost} />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n      <Grid.Row>\r\n        <Grid.Column style={{ maxWidth: 450 }}>\r\n          <PostGallery\r\n            posts={posts}\r\n            numPhotosCol={1}\r\n            isProfile={false}\r\n            loggedUser={loggedUser}\r\n          />\r\n        </Grid.Column>\r\n      </Grid.Row>\r\n    </Grid>\r\n  );\r\n}\r\n\r\n","import React, { useState } from \"react\";\nimport { Route, Routes, Navigate } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport SignupPage from \"../SignupPage/SignupPage\";\nimport LoginPage from \"../LoginPage/LoginPage\";\nimport ProfilePage from \"../Profile/Profile\";\nimport FeedPage from \"../Feed/Feed\";\n\nimport userService from \"../../utils/userService\";\n\nfunction App() {\n  const [user, setUser] = useState(userService.getUser()); \n\n  function handleSignUpOrLogin() {\n    setUser(userService.getUser()); \n  }\n\n  function handleLogout() {\n    userService.logout();\n    setUser(null);\n  }\n  console.log(user,  'this is user')\n  if (user) {\n   \n    return (\n      <Routes>\n        <Route\n          path=\"/\"\n          element={<FeedPage loggedUser={user} handleLogout={handleLogout} />}\n        />\n        <Route\n          path=\"/login\"\n          element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/signup\"\n          element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n        />\n        <Route\n          path=\"/:username\"\n          element={<ProfilePage loggedUser={user} handleLogout={handleLogout} />}\n        />\n      </Routes>\n    );\n  }\n\n  return (\n    <Routes>\n      <Route\n        path=\"/login\"\n        element={<LoginPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route\n        path=\"/signup\"\n        element={<SignupPage handleSignUpOrLogin={handleSignUpOrLogin} />}\n      />\n      <Route path=\"/*\" element={<Navigate to=\"/login\" />} />\n    </Routes>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}